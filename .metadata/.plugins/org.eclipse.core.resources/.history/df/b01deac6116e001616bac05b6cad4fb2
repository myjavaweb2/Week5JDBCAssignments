package com.airhacks;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;

public class DAO {

	static final String DB_URL = "jdbc:mysql://localhost:3306/?user=root&autoReconnect=true&useSSL=false";
	static final String USER = "root";
	static final String PASSWORD = "root";

	static Connection CONN = null;
	static Statement STMT = null;
	static PreparedStatement PREP_STMT = null;
	static ResultSet RES_SET = null;

	static Scanner sc = new Scanner(System.in);

	public static void connectToDatabase() {

		try {
			System.out.println("Trying to connect to the database...");
			CONN = DriverManager.getConnection(DB_URL, USER, PASSWORD);
			System.out.println("Connected to the database.");
		} catch (SQLException e) {
			System.out.println("Cannot connect to the database.");
			e.printStackTrace();
		}
	}// connectToDatabase

	public static void readFromDatabase() {

		connectToDatabase();

		ArrayList<Employee> companyEmployees = new ArrayList<>();

		try {
			STMT = CONN.createStatement();
			RES_SET = STMT.executeQuery("SELECT * FROM company.employees;");

			while (RES_SET.next()) {

				Employee employeeInDatabase = new Employee();

				employeeInDatabase.setEmployeeID(RES_SET.getString("employee_id"));
				employeeInDatabase.setFirstName(RES_SET.getString("first_name"));
				employeeInDatabase.setLastName(RES_SET.getString("last_name"));
				employeeInDatabase.setPosition(RES_SET.getString("position"));
				employeeInDatabase.setSalary(RES_SET.getDouble("salary"));

				companyEmployees.add(employeeInDatabase);

			}

			for (Employee employee : companyEmployees) {

				System.out.println(employee.toString());

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}// readFromDatabase

	public static void writeToDatabase() {

		Employee employeeToAdd = new Employee();

		employeeToAdd = aboutTheEmployee();

		connectToDatabase();

		try {
			PREP_STMT = CONN.prepareStatement(insertToDatabase);

			PREP_STMT.setString(1, employeeToAdd.getFirstName());
			PREP_STMT.setString(2, employeeToAdd.getLastName());
			PREP_STMT.setString(3, employeeToAdd.getPosition());
			PREP_STMT.setDouble(4, employeeToAdd.getSalary());

			PREP_STMT.executeUpdate();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}// writeToDatabase

	private static String insertToDatabase = "INSERT INTO `company`.`employees`"
			+ "(first_name, last_name, position, salary)" + " VALUES " + "(?, ?, ?, ?)";

	private static Employee aboutTheEmployee() {

		Employee employeeToAdd = new Employee();

		System.out.println("What is the employee's first name?");
		employeeToAdd.setFirstName(sc.nextLine());

		System.out.println("What is the employee's last name?");
		employeeToAdd.setLastName(sc.nextLine());

		System.out.println("What is the employee's position?");
		employeeToAdd.setPosition(sc.nextLine());

		System.out.println("What is the employee's salary?");
		employeeToAdd.setSalary(Double.parseDouble(sc.nextLine()));

		return employeeToAdd;

	}// aboutTheEmployee

	public static void deleteFromDatabase() {
		
		connectToDatabase();

		ArrayList<Employee> companyEmployees = new ArrayList<>();

		try {
			STMT = CONN.createStatement();
			RES_SET = STMT.executeQuery("SELECT * FROM company.employees;");

			while (RES_SET.next()) {

				Employee employeeInDatabase = new Employee();

				employeeInDatabase.setEmployeeID(RES_SET.getString("employee_id"));
				employeeInDatabase.setFirstName(RES_SET.getString("first_name"));
				employeeInDatabase.setLastName(RES_SET.getString("last_name"));
				employeeInDatabase.setPosition(RES_SET.getString("position"));
				employeeInDatabase.setSalary(RES_SET.getDouble("salary"));

				companyEmployees.add(employeeInDatabase);

			}

			for (Employee employee : companyEmployees) {

				System.out.println(employee.toString());

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	
//		Employee employeeToDelete = new Employee();
//		
//		employeeToDelete = aboutEmployeeToDelete();
//		
//		try {
//		PREP_STMT = CONN.prepareStatement(deleteFromDatabase);
//		
//		PREP_STMT.executeUpdate();
//		
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}	
		
	}// employeeToDelete

//	private static String deleteFromDatabase = "DELETE FROM `company`.`employees`"
//			+ " WHERE employee_id = employeeToDelete ";
//
//	private static Employee aboutEmployeeToDelete() {
//
//		Employee employeeToDelete = new Employee();
//
//		System.out.println("What is the employee ID number of the employee to be deleted?");
//		employeeToDelete.add(sc.nextLine());
//
//		return employeeToDelete;
//
//	}// aboutTheEmployee

}// DAO class
